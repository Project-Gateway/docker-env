version: '3'
services:

  # Nginx server that proxies all http requests
  web:
    build:
      context: services/web
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - ./services/web/conf/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./services/web/conf/snippets/self-signed.conf:/etc/nginx/snippets/self-signed.conf
      - ./services/web/conf/snippets/ssl-params.conf:/etc/nginx/snippets/ssl-params.conf
      - ./services/web/ssl/certs/dhparam.pem:/etc/ssl/certs/dhparam.pem
      - ../appointments:/var/www/api
      - ./services/ssl/server.crt:/etc/ssl/certs/server.crt
      - ./services/ssl/server.key:/etc/ssl/private/server.key

    depends_on:
      - login-api
      - web-ui
      - graphql-api

  # Vue application for Web Client Application
  web-ui:
      build:
        context: services/client
      working_dir: /client
      environment:
        - NODE_ENV=development
      volumes:
        - ../web-ui:/client
      ports:
        - 8081:8080
      command: "npm run dev"

  # Lumen based login API
  login-api:
    build:
      context: services/api
    volumes:
      - ../login-api:/var/www/api
    depends_on:
      - postgres

  schedule-api:
    build:
      context: services/api
    volumes:
      - ../schedule-api:/var/www/api
    depends_on:
      - postgres

  appointments:
    build:
      context: services/api
    volumes:
      - ../appointments:/var/www/api
    depends_on:
      - postgres

  # Postgraphile service
  graphql-api:
    build:
      context: services/graphql
    volumes:
      - ./services/graphql/wait_for_postgres.sh:/wait_for_postgres.sh
      - ../graphql-api:/graphql-api
    working_dir: /graphql-api
    command:
      - "/wait_for_postgres.sh"
      - "postgres://graphql:graphql@postgres:5432/postgres"
      - "nodemon index.js"

    ports:
      - 5000:5000
    depends_on:
      - postgres

  # Command line application to manage the db code (schema version, migrations, etc)
  db:
    build:
      context: services/db-control
    working_dir: /db
    volumes:
      - ../db-control:/db
    entrypoint: ["php", "db"]
    depends_on:
      - postgres

  # Main database
  postgres:
    build:
      context: services/postgres
    command: postgres -c logging_collector=on -c log_destination=stderr -c log_directory=/var/log/postgres -c config_file=/etc/postgres/postgresql.conf
    volumes:
      - .db_data:/var/lib/postgresql/data
      - ./services/postgres/logs:/var/log/postgres
      - ./services/postgres/config:/etc/postgres
    ports:
      - 5432:5432
    environment:
      - "POSTGRES_PASSWORD=postgres"

  redis:
    image: redis
    ports:
      - 6379:6379

  mockserver:
    image: jamesdbloom/mockserver
    ports:
      - "1080:1080"

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - 9001:80
    environment:
      - "PGADMIN_DEFAULT_EMAIL=local"
      - "PGADMIN_DEFAULT_PASSWORD=local"

volumes:
  db_data:
